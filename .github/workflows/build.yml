name: Build
on: [push]
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        type: [Debug, RelWithDebInfo]
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4
      - name: VC Vars
        # Setup vcvars on Windows
        # MSVC's address sanitizer attaches dependencies to several DLLs which are not in PATH
        # vcvars will add them to PATH and allow msvc asan executables to run
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: 14.38.33130
      - name: Configure ASAN
        run: cmake . -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DSAN_ADDR=1
      - name: Build ASAN
        run: cmake --build .
      - name: Test ASAN
        run: ctest --output-on-failure
        env:
          UBSAN_OPTIONS: halt_on_error=1
      - name: Configure TSAN
        run: cmake . -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DSAN_ADDR=0 -DSAN_THREAD=1
      - name: Build TSAN
        run: cmake --build .
      - name: Test TSAN
        run: ctest -L tsan --output-on-failure
